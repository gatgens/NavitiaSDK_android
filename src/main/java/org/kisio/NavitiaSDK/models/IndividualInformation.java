/*
 * navitia
 *      navitia.io is the open API for building cool stuff with mobility data. It provides the following services      * journeys computation     * line schedules     * next departures     * exploration of public transport data / search places     * and sexy things such as isochrones      navitia is a HATEOAS API that returns JSON formated results     
 *
 * OpenAPI spec version: v2.78.0
 * Contact: navitia@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.kisio.NavitiaSDK.models;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.kisio.NavitiaSDK.models.IndividualRating;
import android.os.Parcelable;
import android.os.Parcel;

/**
 * IndividualInformation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.NavitiaSDKJavaClientCodegen", date = "2019-05-13T11:47:49.806+02:00")
public class IndividualInformation implements Parcelable {
  @SerializedName("alias")
  private String alias = null;

  @SerializedName("image")
  private String image = null;

  /**
   * Gets or Sets gender
   */
  public enum GenderEnum {
    @SerializedName("female")
    FEMALE("female"),
    
    @SerializedName("male")
    MALE("male");

    private String value;

    GenderEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("gender")
  private GenderEnum gender = null;

  @SerializedName("rating")
  private IndividualRating rating = null;

  public IndividualInformation alias(String alias) {
    this.alias = alias;
    return this;
  }

   /**
   * Get alias
   * @return alias
  **/
  @ApiModelProperty(required = true, value = "")
  public String getAlias() {
    return alias;
  }

  public void setAlias(String alias) {
    this.alias = alias;
  }

  public IndividualInformation image(String image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @ApiModelProperty(value = "")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public IndividualInformation gender(GenderEnum gender) {
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @ApiModelProperty(value = "")
  public GenderEnum getGender() {
    return gender;
  }

  public void setGender(GenderEnum gender) {
    this.gender = gender;
  }

  public IndividualInformation rating(IndividualRating rating) {
    this.rating = rating;
    return this;
  }

   /**
   * Get rating
   * @return rating
  **/
  @ApiModelProperty(value = "")
  public IndividualRating getRating() {
    return rating;
  }

  public void setRating(IndividualRating rating) {
    this.rating = rating;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndividualInformation individualInformation = (IndividualInformation) o;
    return Objects.equals(this.alias, individualInformation.alias) &&
        Objects.equals(this.image, individualInformation.image) &&
        Objects.equals(this.gender, individualInformation.gender) &&
        Objects.equals(this.rating, individualInformation.rating);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alias, image, gender, rating);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndividualInformation {\n");
    
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
  public void writeToParcel(Parcel out, int flags) {
     
    out.writeValue(alias);

    out.writeValue(image);

    out.writeValue(gender);

    out.writeValue(rating);
  }

  public IndividualInformation() {
    super();
  }

  IndividualInformation(Parcel in) {
    
    alias = (String)in.readValue(null);
    image = (String)in.readValue(null);
    gender = (GenderEnum)in.readValue(null);
    rating = (IndividualRating)in.readValue(IndividualRating.class.getClassLoader());
  }
  
  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<IndividualInformation> CREATOR = new Parcelable.Creator<IndividualInformation>() {
    public IndividualInformation createFromParcel(Parcel in) {
      return new IndividualInformation(in);
    }
    public IndividualInformation[] newArray(int size) {
      return new IndividualInformation[size];
    }
  };
}

