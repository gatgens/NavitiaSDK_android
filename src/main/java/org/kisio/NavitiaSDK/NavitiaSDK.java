package org.kisio.NavitiaSDK;

import org.kisio.NavitiaSDK.apis.AddressesApi;
import org.kisio.NavitiaSDK.apis.CalendarsApi;
import org.kisio.NavitiaSDK.apis.CommercialModesApi;
import org.kisio.NavitiaSDK.apis.CompaniesApi;
import org.kisio.NavitiaSDK.apis.ContributorsApi;
import org.kisio.NavitiaSDK.apis.CoordApi;
import org.kisio.NavitiaSDK.apis.CoordsApi;
import org.kisio.NavitiaSDK.apis.CoverageApi;
import org.kisio.NavitiaSDK.apis.DatasetsApi;
import org.kisio.NavitiaSDK.apis.DisruptionsApi;
import org.kisio.NavitiaSDK.apis.EquipmentReportsApi;
import org.kisio.NavitiaSDK.apis.GeoStatusApi;
import org.kisio.NavitiaSDK.apis.GraphicalIsochroneApi;
import org.kisio.NavitiaSDK.apis.HeatMapApi;
import org.kisio.NavitiaSDK.apis.JourneyPatternPointsApi;
import org.kisio.NavitiaSDK.apis.JourneyPatternsApi;
import org.kisio.NavitiaSDK.apis.JourneysApi;
import org.kisio.NavitiaSDK.apis.LineGroupsApi;
import org.kisio.NavitiaSDK.apis.LineReportsApi;
import org.kisio.NavitiaSDK.apis.LinesApi;
import org.kisio.NavitiaSDK.apis.NetworksApi;
import org.kisio.NavitiaSDK.apis.NextArrivalsApi;
import org.kisio.NavitiaSDK.apis.NextDeparturesApi;
import org.kisio.NavitiaSDK.apis.PhysicalModesApi;
import org.kisio.NavitiaSDK.apis.PlaceUriApi;
import org.kisio.NavitiaSDK.apis.PlacesApi;
import org.kisio.NavitiaSDK.apis.PlacesNearbyApi;
import org.kisio.NavitiaSDK.apis.PoiTypesApi;
import org.kisio.NavitiaSDK.apis.PoisApi;
import org.kisio.NavitiaSDK.apis.PtobjectsApi;
import org.kisio.NavitiaSDK.apis.RouteSchedulesApi;
import org.kisio.NavitiaSDK.apis.RoutesApi;
import org.kisio.NavitiaSDK.apis.StopAreasApi;
import org.kisio.NavitiaSDK.apis.StopPointsApi;
import org.kisio.NavitiaSDK.apis.StopSchedulesApi;
import org.kisio.NavitiaSDK.apis.TrafficReportApi;
import org.kisio.NavitiaSDK.apis.TripsApi;
import org.kisio.NavitiaSDK.apis.VehicleJourneysApi;

public class NavitiaSDK {
    public final AddressesApi addressesApi;
    public final CalendarsApi calendarsApi;
    public final CommercialModesApi commercialModesApi;
    public final CompaniesApi companiesApi;
    public final ContributorsApi contributorsApi;
    public final CoordApi coordApi;
    public final CoordsApi coordsApi;
    public final CoverageApi coverageApi;
    public final DatasetsApi datasetsApi;
    public final DisruptionsApi disruptionsApi;
    public final EquipmentReportsApi equipmentReportsApi;
    public final GeoStatusApi geoStatusApi;
    public final GraphicalIsochroneApi graphicalIsochroneApi;
    public final HeatMapApi heatMapApi;
    public final JourneyPatternPointsApi journeyPatternPointsApi;
    public final JourneyPatternsApi journeyPatternsApi;
    public final JourneysApi journeysApi;
    public final LineGroupsApi lineGroupsApi;
    public final LineReportsApi lineReportsApi;
    public final LinesApi linesApi;
    public final NetworksApi networksApi;
    public final NextArrivalsApi nextArrivalsApi;
    public final NextDeparturesApi nextDeparturesApi;
    public final PhysicalModesApi physicalModesApi;
    public final PlaceUriApi placeUriApi;
    public final PlacesApi placesApi;
    public final PlacesNearbyApi placesNearbyApi;
    public final PoiTypesApi poiTypesApi;
    public final PoisApi poisApi;
    public final PtobjectsApi ptobjectsApi;
    public final RouteSchedulesApi routeSchedulesApi;
    public final RoutesApi routesApi;
    public final StopAreasApi stopAreasApi;
    public final StopPointsApi stopPointsApi;
    public final StopSchedulesApi stopSchedulesApi;
    public final TrafficReportApi trafficReportApi;
    public final TripsApi tripsApi;
    public final VehicleJourneysApi vehicleJourneysApi;

    public NavitiaSDK(NavitiaConfiguration configuration) throws Exception {
        this.addressesApi = new AddressesApi(configuration.getToken());
        this.calendarsApi = new CalendarsApi(configuration.getToken());
        this.commercialModesApi = new CommercialModesApi(configuration.getToken());
        this.companiesApi = new CompaniesApi(configuration.getToken());
        this.contributorsApi = new ContributorsApi(configuration.getToken());
        this.coordApi = new CoordApi(configuration.getToken());
        this.coordsApi = new CoordsApi(configuration.getToken());
        this.coverageApi = new CoverageApi(configuration.getToken());
        this.datasetsApi = new DatasetsApi(configuration.getToken());
        this.disruptionsApi = new DisruptionsApi(configuration.getToken());
        this.equipmentReportsApi = new EquipmentReportsApi(configuration.getToken());
        this.geoStatusApi = new GeoStatusApi(configuration.getToken());
        this.graphicalIsochroneApi = new GraphicalIsochroneApi(configuration.getToken());
        this.heatMapApi = new HeatMapApi(configuration.getToken());
        this.journeyPatternPointsApi = new JourneyPatternPointsApi(configuration.getToken());
        this.journeyPatternsApi = new JourneyPatternsApi(configuration.getToken());
        this.journeysApi = new JourneysApi(configuration.getToken());
        this.lineGroupsApi = new LineGroupsApi(configuration.getToken());
        this.lineReportsApi = new LineReportsApi(configuration.getToken());
        this.linesApi = new LinesApi(configuration.getToken());
        this.networksApi = new NetworksApi(configuration.getToken());
        this.nextArrivalsApi = new NextArrivalsApi(configuration.getToken());
        this.nextDeparturesApi = new NextDeparturesApi(configuration.getToken());
        this.physicalModesApi = new PhysicalModesApi(configuration.getToken());
        this.placeUriApi = new PlaceUriApi(configuration.getToken());
        this.placesApi = new PlacesApi(configuration.getToken());
        this.placesNearbyApi = new PlacesNearbyApi(configuration.getToken());
        this.poiTypesApi = new PoiTypesApi(configuration.getToken());
        this.poisApi = new PoisApi(configuration.getToken());
        this.ptobjectsApi = new PtobjectsApi(configuration.getToken());
        this.routeSchedulesApi = new RouteSchedulesApi(configuration.getToken());
        this.routesApi = new RoutesApi(configuration.getToken());
        this.stopAreasApi = new StopAreasApi(configuration.getToken());
        this.stopPointsApi = new StopPointsApi(configuration.getToken());
        this.stopSchedulesApi = new StopSchedulesApi(configuration.getToken());
        this.trafficReportApi = new TrafficReportApi(configuration.getToken());
        this.tripsApi = new TripsApi(configuration.getToken());
        this.vehicleJourneysApi = new VehicleJourneysApi(configuration.getToken());
    }
}
