/*
 * navitia
 *      navitia.io is the open API for building cool stuff with mobility data. It provides the following services      * journeys computation     * line schedules     * next departures     * exploration of public transport data / search places     * and sexy things such as isochrones      navitia is a HATEOAS API that returns JSON formated results     
 *
 * OpenAPI spec version: v2.80.2
 * Contact: navitia@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.kisio.navitia.sdk.expert.models;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.kisio.navitia.sdk.expert.models.Context;
import com.kisio.navitia.sdk.expert.models.Disruption;
import com.kisio.navitia.sdk.expert.models.Error;
import com.kisio.navitia.sdk.expert.models.FeedPublisher;
import com.kisio.navitia.sdk.expert.models.JourneyPatternPoint;
import com.kisio.navitia.sdk.expert.models.LinkSchema;
import com.kisio.navitia.sdk.expert.models.Note;
import com.kisio.navitia.sdk.expert.models.Pagination;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import android.os.Parcelable;
import android.os.Parcel;

/**
 * JourneyPatternPoints
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.NavitiaSDKJavaClientCodegen", date = "2019-06-13T13:20:14.367+02:00")
public class JourneyPatternPoints implements Parcelable {
  @SerializedName("pagination")
  private Pagination pagination = null;

  @SerializedName("journey_pattern_points")
  private List<JourneyPatternPoint> journeyPatternPoints = null;

  @SerializedName("links")
  private List<LinkSchema> links = null;

  @SerializedName("disruptions")
  private List<Disruption> disruptions = new ArrayList<Disruption>();

  @SerializedName("notes")
  private List<Note> notes = null;

  @SerializedName("feed_publishers")
  private List<FeedPublisher> feedPublishers = new ArrayList<FeedPublisher>();

  @SerializedName("context")
  private Context context = null;

  @SerializedName("error")
  private Error error = null;

  public JourneyPatternPoints pagination(Pagination pagination) {
    this.pagination = pagination;
    return this;
  }

   /**
   * Get pagination
   * @return pagination
  **/
  @ApiModelProperty(required = true, value = "")
  public Pagination getPagination() {
    return pagination;
  }

  public void setPagination(Pagination pagination) {
    this.pagination = pagination;
  }

  public JourneyPatternPoints journeyPatternPoints(List<JourneyPatternPoint> journeyPatternPoints) {
    this.journeyPatternPoints = journeyPatternPoints;
    return this;
  }

  public JourneyPatternPoints addJourneyPatternPointsItem(JourneyPatternPoint journeyPatternPointsItem) {
    if (this.journeyPatternPoints == null) {
      this.journeyPatternPoints = new ArrayList<JourneyPatternPoint>();
    }
    this.journeyPatternPoints.add(journeyPatternPointsItem);
    return this;
  }

   /**
   * Get journeyPatternPoints
   * @return journeyPatternPoints
  **/
  @ApiModelProperty(value = "")
  public List<JourneyPatternPoint> getJourneyPatternPoints() {
    return journeyPatternPoints;
  }

  public void setJourneyPatternPoints(List<JourneyPatternPoint> journeyPatternPoints) {
    this.journeyPatternPoints = journeyPatternPoints;
  }

  public JourneyPatternPoints links(List<LinkSchema> links) {
    this.links = links;
    return this;
  }

  public JourneyPatternPoints addLinksItem(LinkSchema linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<LinkSchema>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public List<LinkSchema> getLinks() {
    return links;
  }

  public void setLinks(List<LinkSchema> links) {
    this.links = links;
  }

  public JourneyPatternPoints disruptions(List<Disruption> disruptions) {
    this.disruptions = disruptions;
    return this;
  }

  public JourneyPatternPoints addDisruptionsItem(Disruption disruptionsItem) {
    this.disruptions.add(disruptionsItem);
    return this;
  }

   /**
   * Get disruptions
   * @return disruptions
  **/
  @ApiModelProperty(required = true, value = "")
  public List<Disruption> getDisruptions() {
    return disruptions;
  }

  public void setDisruptions(List<Disruption> disruptions) {
    this.disruptions = disruptions;
  }

  public JourneyPatternPoints notes(List<Note> notes) {
    this.notes = notes;
    return this;
  }

  public JourneyPatternPoints addNotesItem(Note notesItem) {
    if (this.notes == null) {
      this.notes = new ArrayList<Note>();
    }
    this.notes.add(notesItem);
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @ApiModelProperty(value = "")
  public List<Note> getNotes() {
    return notes;
  }

  public void setNotes(List<Note> notes) {
    this.notes = notes;
  }

  public JourneyPatternPoints feedPublishers(List<FeedPublisher> feedPublishers) {
    this.feedPublishers = feedPublishers;
    return this;
  }

  public JourneyPatternPoints addFeedPublishersItem(FeedPublisher feedPublishersItem) {
    this.feedPublishers.add(feedPublishersItem);
    return this;
  }

   /**
   * Get feedPublishers
   * @return feedPublishers
  **/
  @ApiModelProperty(required = true, value = "")
  public List<FeedPublisher> getFeedPublishers() {
    return feedPublishers;
  }

  public void setFeedPublishers(List<FeedPublisher> feedPublishers) {
    this.feedPublishers = feedPublishers;
  }

  public JourneyPatternPoints context(Context context) {
    this.context = context;
    return this;
  }

   /**
   * Get context
   * @return context
  **/
  @ApiModelProperty(value = "")
  public Context getContext() {
    return context;
  }

  public void setContext(Context context) {
    this.context = context;
  }

  public JourneyPatternPoints error(Error error) {
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @ApiModelProperty(value = "")
  public Error getError() {
    return error;
  }

  public void setError(Error error) {
    this.error = error;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JourneyPatternPoints journeyPatternPoints = (JourneyPatternPoints) o;
    return Objects.equals(this.pagination, journeyPatternPoints.pagination) &&
        Objects.equals(this.journeyPatternPoints, journeyPatternPoints.journeyPatternPoints) &&
        Objects.equals(this.links, journeyPatternPoints.links) &&
        Objects.equals(this.disruptions, journeyPatternPoints.disruptions) &&
        Objects.equals(this.notes, journeyPatternPoints.notes) &&
        Objects.equals(this.feedPublishers, journeyPatternPoints.feedPublishers) &&
        Objects.equals(this.context, journeyPatternPoints.context) &&
        Objects.equals(this.error, journeyPatternPoints.error);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pagination, journeyPatternPoints, links, disruptions, notes, feedPublishers, context, error);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JourneyPatternPoints {\n");
    
    sb.append("    pagination: ").append(toIndentedString(pagination)).append("\n");
    sb.append("    journeyPatternPoints: ").append(toIndentedString(journeyPatternPoints)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    disruptions: ").append(toIndentedString(disruptions)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    feedPublishers: ").append(toIndentedString(feedPublishers)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
  public void writeToParcel(Parcel out, int flags) {
     
    out.writeValue(pagination);

    out.writeValue(journeyPatternPoints);

    out.writeValue(links);

    out.writeValue(disruptions);

    out.writeValue(notes);

    out.writeValue(feedPublishers);

    out.writeValue(context);

    out.writeValue(error);
  }

  public JourneyPatternPoints() {
    super();
  }

  JourneyPatternPoints(Parcel in) {
    
    pagination = (Pagination)in.readValue(Pagination.class.getClassLoader());
    journeyPatternPoints = (List<JourneyPatternPoint>)in.readValue(JourneyPatternPoint.class.getClassLoader());
    links = (List<LinkSchema>)in.readValue(LinkSchema.class.getClassLoader());
    disruptions = (List<Disruption>)in.readValue(Disruption.class.getClassLoader());
    notes = (List<Note>)in.readValue(Note.class.getClassLoader());
    feedPublishers = (List<FeedPublisher>)in.readValue(FeedPublisher.class.getClassLoader());
    context = (Context)in.readValue(Context.class.getClassLoader());
    error = (Error)in.readValue(Error.class.getClassLoader());
  }
  
  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<JourneyPatternPoints> CREATOR = new Parcelable.Creator<JourneyPatternPoints>() {
    public JourneyPatternPoints createFromParcel(Parcel in) {
      return new JourneyPatternPoints(in);
    }
    public JourneyPatternPoints[] newArray(int size) {
      return new JourneyPatternPoints[size];
    }
  };
}

