/*
 * navitia
 *      navitia.io is the open API for building cool stuff with mobility data. It provides the following services      * journeys computation     * line schedules     * next departures     * exploration of public transport data / search places     * and sexy things such as isochrones      navitia is a HATEOAS API that returns JSON formated results     
 *
 * OpenAPI spec version: v2.80.2-3-g25474e0
 * Contact: navitia@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.kisio.navitia.sdk.expert.models;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.kisio.navitia.sdk.expert.models.CO2;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import android.os.Parcelable;
import android.os.Parcel;

/**
 * Context
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.NavitiaSDKJavaClientCodegen", date = "2019-07-04T15:30:47.760+02:00")
public class Context implements Parcelable {
  @SerializedName("timezone")
  private String timezone = null;

  @SerializedName("current_datetime")
  private String currentDatetime = null;

  @SerializedName("car_direct_path")
  private CO2 carDirectPath = null;

  public Context timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * Timezone of any datetime in the response, default value Africa/Abidjan (UTC)
   * @return timezone
  **/
  @ApiModelProperty(value = "Timezone of any datetime in the response, default value Africa/Abidjan (UTC)")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public Context currentDatetime(String currentDatetime) {
    this.currentDatetime = currentDatetime;
    return this;
  }

   /**
   * The datetime of the request (considered as \"now\")
   * @return currentDatetime
  **/
  @ApiModelProperty(value = "The datetime of the request (considered as \"now\")")
  public String getCurrentDatetime() {
    return currentDatetime;
  }

  public void setCurrentDatetime(String currentDatetime) {
    this.currentDatetime = currentDatetime;
  }

  public Context carDirectPath(CO2 carDirectPath) {
    this.carDirectPath = carDirectPath;
    return this;
  }

   /**
   * Get carDirectPath
   * @return carDirectPath
  **/
  @ApiModelProperty(value = "")
  public CO2 getCarDirectPath() {
    return carDirectPath;
  }

  public void setCarDirectPath(CO2 carDirectPath) {
    this.carDirectPath = carDirectPath;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Context context = (Context) o;
    return Objects.equals(this.timezone, context.timezone) &&
        Objects.equals(this.currentDatetime, context.currentDatetime) &&
        Objects.equals(this.carDirectPath, context.carDirectPath);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timezone, currentDatetime, carDirectPath);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Context {\n");
    
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    currentDatetime: ").append(toIndentedString(currentDatetime)).append("\n");
    sb.append("    carDirectPath: ").append(toIndentedString(carDirectPath)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
  public void writeToParcel(Parcel out, int flags) {
     
    out.writeValue(timezone);

    out.writeValue(currentDatetime);

    out.writeValue(carDirectPath);
  }

  public Context() {
    super();
  }

  Context(Parcel in) {
    
    timezone = (String)in.readValue(null);
    currentDatetime = (String)in.readValue(null);
    carDirectPath = (CO2)in.readValue(CO2.class.getClassLoader());
  }
  
  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<Context> CREATOR = new Parcelable.Creator<Context>() {
    public Context createFromParcel(Parcel in) {
      return new Context(in);
    }
    public Context[] newArray(int size) {
      return new Context[size];
    }
  };
}

